DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : DESCE
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : pname
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Provider)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Provider, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Provider)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Provider)
          - SQL table alias mapping - provider0_
          - alias suffix - 0_
          - suffixed key columns - {PNO1_3_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Provider [PESSIMISTIC_WRITE]: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a415aa9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : DESCE
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : pname
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Provider)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Provider, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Provider)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Provider)
          - SQL table alias mapping - provider0_
          - alias suffix - 0_
          - suffixed key columns - {PNO1_3_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Provider [PESSIMISTIC_FORCE_INCREMENT]: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ea1fda]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : DESCE
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : pname
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Provider)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Provider, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Provider)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Provider)
          - SQL table alias mapping - provider0_
          - alias suffix - 0_
          - suffixed key columns - {PNO1_3_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Provider [OPTIMISTIC]: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420745d7]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : DESCE
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : address
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : phone
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : pname
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Provider)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Provider, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Provider)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Provider)
          - SQL table alias mapping - provider0_
          - alias suffix - 0_
          - suffixed key columns - {PNO1_3_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Provider [OPTIMISTIC_FORCE_INCREMENT]: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity main.com.ssh.shop.entity.Provider: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity main.com.ssh.shop.entity.Provider: select provider0_.PNO as PNO1_3_0_, provider0_.DESCE as DESCE2_3_0_, provider0_.ADDRESS as ADDRESS3_3_0_, provider0_.PHONE as PHONE4_3_0_, provider0_.PNAME as PNAME5_3_0_ from PROVIDER provider0_ where provider0_.PNO=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: main.com.ssh.shop.entity.Warehouse
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select ID from WAREHOUSE where ID =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select warehouse_.ID, warehouse_.GOODID as GOODID2_6_, warehouse_.MIN as MIN3_6_, warehouse_.NUM as NUM4_6_ from WAREHOUSE warehouse_ where warehouse_.ID=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into WAREHOUSE (GOODID, MIN, NUM, ID) values (?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update WAREHOUSE set GOODID=?, MIN=?, NUM=? where ID=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from WAREHOUSE where ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fa47fea]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [NONE]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43e173]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [READ]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@545f80bf]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [UPGRADE]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22fa55b2]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [UPGRADE_NOWAIT]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6594402a]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [UPGRADE_SKIPLOCKED]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@405325cf]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [FORCE]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79c3f01f]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [PESSIMISTIC_READ]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? lock in share mode
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350b3a17]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [PESSIMISTIC_WRITE]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669d2b1b]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [PESSIMISTIC_FORCE_INCREMENT]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ea9f009]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [OPTIMISTIC]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5298dead]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : goodid
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : min
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Warehouse)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Warehouse, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Warehouse)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Warehouse)
          - SQL table alias mapping - warehouse0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Warehouse [OPTIMISTIC_FORCE_INCREMENT]: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity main.com.ssh.shop.entity.Warehouse: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity main.com.ssh.shop.entity.Warehouse: select warehouse0_.ID as ID1_6_0_, warehouse0_.GOODID as GOODID2_6_0_, warehouse0_.MIN as MIN3_6_0_, warehouse0_.NUM as NUM4_6_0_ from WAREHOUSE warehouse0_ where warehouse0_.ID=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: main.com.ssh.shop.entity.Whlist
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select ID from WHLIST where ID =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select whlist_.ID, whlist_.DATE as DATE2_7_, whlist_.MONEY as MONEY3_7_, whlist_.NUM as NUM4_7_, whlist_.TYPE as TYPE5_7_, whlist_.USERID as USERID6_7_ from WHLIST whlist_ where whlist_.ID=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into WHLIST (DATE, MONEY, NUM, TYPE, USERID, ID) values (?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update WHLIST set DATE=?, MONEY=?, NUM=?, TYPE=?, USERID=? where ID=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from WHLIST where ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c7a078]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [NONE]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ab9b447]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [READ]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f8caaf3]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [UPGRADE]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15b986cd]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [UPGRADE_NOWAIT]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41c62850]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [UPGRADE_SKIPLOCKED]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328572f0]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [FORCE]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17f460bb]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [PESSIMISTIC_READ]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? lock in share mode
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d2a6eac]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [PESSIMISTIC_WRITE]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c0f7678]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [PESSIMISTIC_FORCE_INCREMENT]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aa648b9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [OPTIMISTIC]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@742d4e15]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : date
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : money
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : num
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : type
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : userid
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=main.com.ssh.shop.entity.Whlist)
    - Returns
       - EntityReturnImpl(entity=main.com.ssh.shop.entity.Whlist, querySpaceUid=<gen:0>, path=main.com.ssh.shop.entity.Whlist)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=main.com.ssh.shop.entity.Whlist)
          - SQL table alias mapping - whlist0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity main.com.ssh.shop.entity.Whlist [OPTIMISTIC_FORCE_INCREMENT]: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity main.com.ssh.shop.entity.Whlist: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity main.com.ssh.shop.entity.Whlist: select whlist0_.ID as ID1_7_0_, whlist0_.DATE as DATE2_7_0_, whlist0_.MONEY as MONEY3_7_0_, whlist0_.NUM as NUM4_7_0_, whlist0_.TYPE as TYPE5_7_0_, whlist0_.USERID as USERID6_7_0_ from WHLIST whlist0_ where whlist0_.ID=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5c09d180
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 12ba49b2-ebaf-450d-85d4-5ee45542c41b (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000228: Running hbm2ddl schema update
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000102: Fetching database metadata
DEBUG main com.mchange.v2.resourcepool.BasicResourcePool - trace com.mchange.v2.resourcepool.BasicResourcePool@333dd51e [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@b3300a7)
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000396: Updating schema
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.GOODS
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [goodsid, name, pic, type, samary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.MENU
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [parent, icon, id, tit, url]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.ORDER
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [data, goodsid, price, num, id, userid]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.PROVIDER
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [pno, address, desce, phone, pname]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.STOCK
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, money, goodsid, price, num, sellprice, id, userid, samary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.USER
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [password, id, pic, userid]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [uk_26o4fboslhtcwvy0eug03fpk3, primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.WAREHOUSE
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [min, num, id, goodid]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000261: Table found: shop.WHLIST
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000037: Columns: [date, money, num, id, type, userid]
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000108: Foreign keys: []
INFO main org.hibernate.tool.hbm2ddl.TableMetadata - HHH000126: Indexes: [primary]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.MySQLDialect]
DEBUG main org.hibernate.tool.hbm2ddl.SchemaUpdate - alter table ORDER add column DATE datetime
DEBUG main com.mchange.v2.c3p0.impl.NewPooledConnection - com.mchange.v2.c3p0.impl.NewPooledConnection@1d63474d handling a throwable.
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER 
        add column DATE datetime' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:400)
	at com.mysql.jdbc.Util.getInstance(Util.java:383)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3847)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3783)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2447)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2594)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2541)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1604)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1535)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.executeUpdate(NewProxyStatement.java:358)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:252)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1930)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBuilder.buildSessionFactory(LocalSessionFactoryBuilder.java:372)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:454)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
DEBUG main com.mchange.v2.sql.SqlUtils - Attempted to convert SQLException to SQLException. Leaving it alone. [SQLState: 42000; errorCode: 1064]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER 
        add column DATE datetime' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:400)
	at com.mysql.jdbc.Util.getInstance(Util.java:383)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3847)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3783)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2447)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2594)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2541)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1604)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1535)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.executeUpdate(NewProxyStatement.java:358)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:252)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1930)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBuilder.buildSessionFactory(LocalSessionFactoryBuilder.java:372)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:454)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
DEBUG main com.mchange.v2.c3p0.impl.DefaultConnectionTester - Testing a Connection in response to an Exception:
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER 
        add column DATE datetime' at line 1
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:400)
	at com.mysql.jdbc.Util.getInstance(Util.java:383)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:980)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3847)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3783)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2447)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2594)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2541)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1604)
	at com.mysql.jdbc.StatementImpl.executeUpdate(StatementImpl.java:1535)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.executeUpdate(NewProxyStatement.java:358)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:252)
	at org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:203)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:522)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1859)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1930)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBuilder.buildSessionFactory(LocalSessionFactoryBuilder.java:372)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.buildSessionFactory(LocalSessionFactoryBean.java:454)
	at org.springframework.orm.hibernate4.LocalSessionFactoryBean.afterPropertiesSet(LocalSessionFactoryBean.java:439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:545)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:753)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:839)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:538)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:125)
	at org.springframework.test.context.support.AbstractGenericContextLoader.loadContext(AbstractGenericContextLoader.java:60)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.delegateLoading(AbstractDelegatingSmartContextLoader.java:109)
	at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.loadContext(AbstractDelegatingSmartContextLoader.java:261)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:98)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:116)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:83)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:117)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:83)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:228)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:230)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:249)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:89)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:193)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
ERROR main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000388: Unsuccessful: alter table ORDER add column DATE datetime
ERROR main org.hibernate.tool.hbm2ddl.SchemaUpdate - You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ORDER 
        add column DATE datetime' at line 1
INFO main org.hibernate.tool.hbm2ddl.SchemaUpdate - HHH000232: Schema update complete
DEBUG main com.mchange.v2.async.ThreadPoolAsynchronousRunner - com.mchange.v2.async.ThreadPoolAsynchronousRunner@4097cac: Adding task to queue -- com.mchange.v2.resourcepool.BasicResourcePool$1RefurbishCheckinResourceTask@48e7b3d2
DEBUG main com.mchange.v2.resourcepool.BasicResourcePool - trace com.mchange.v2.resourcepool.BasicResourcePool@333dd51e [managed: 3, unused: 2, excluded: 0] (e.g. com.mchange.v2.c3p0.impl.NewPooledConnection@b3300a7)
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
INFO main org.springframework.orm.hibernate4.HibernateTransactionManager - Using DataSource [com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 3, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 2sm4zm9sgii1bgiecqvv|1040be71, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceUseNamedDriverClass -> false, identityToken -> 2sm4zm9sgii1bgiecqvv|1040be71, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://120.77.223.41:3306/shop?useUnicode=true&characterEncoding=UTF-8, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 15, maxStatements -> 0, maxStatementsPerConnection -> 0, minPoolSize -> 3, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]] of Hibernate SessionFactory for HibernateTransactionManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'advice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'advice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'advice' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean '(inner bean)#5e76a2bb'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [save*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
DEBUG main org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource - Adding transactional method [*] with attribute [PROPAGATION_SUPPORTS,ISOLATION_DEFAULT]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean '(inner bean)#5e76a2bb'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'advice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'advice'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'menuService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'menuService'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.context.annotation.CommonAnnotationBeanPostProcessor - Found init method on class [main.com.ssh.shop.service.impl.MenuServiceImpl]: public void main.com.ssh.shop.service.impl.BaseServiceImpl.init()
DEBUG main org.springframework.context.annotation.CommonAnnotationBeanPostProcessor - Registered init method on class [main.com.ssh.shop.service.impl.MenuServiceImpl]: org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement@316510
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [main.com.ssh.shop.service.impl.MenuServiceImpl]: ResourceElement for protected main.com.ssh.shop.dao.UserDao main.com.ssh.shop.service.impl.BaseServiceImpl.userDao
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [main.com.ssh.shop.service.impl.MenuServiceImpl]: ResourceElement for protected main.com.ssh.shop.dao.MenuDao main.com.ssh.shop.service.impl.BaseServiceImpl.menuDao
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [main.com.ssh.shop.service.impl.MenuServiceImpl]: ResourceElement for private main.com.ssh.shop.dao.MenuDao main.com.ssh.shop.service.impl.MenuServiceImpl.menuDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'menuService' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'menuService': ResourceElement for protected main.com.ssh.shop.dao.UserDao main.com.ssh.shop.service.impl.BaseServiceImpl.userDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'userDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'userDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [main.com.ssh.shop.dao.impl.UserDaoImpl]: ResourceElement for private org.hibernate.SessionFactory main.com.ssh.shop.dao.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'userDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'userDao': ResourceElement for private org.hibernate.SessionFactory main.com.ssh.shop.dao.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'UserDaoImpl.getUser' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [main.com.ssh.shop.dao.impl.UserDaoImpl@7a94b64e]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'userDao'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'menuService': ResourceElement for protected main.com.ssh.shop.dao.MenuDao main.com.ssh.shop.service.impl.BaseServiceImpl.menuDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'MenuDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'MenuDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [main.com.ssh.shop.dao.impl.MenuDaoImpl]: ResourceElement for private org.hibernate.SessionFactory main.com.ssh.shop.dao.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'MenuDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'MenuDao': ResourceElement for private org.hibernate.SessionFactory main.com.ssh.shop.dao.impl.BaseDaoImpl.sessionFactory
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'sessionFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'MenuDaoImpl.getAllMenu' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
DEBUG main org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator - Creating implicit proxy for bean 'MenuDao' with 0 common interceptors and 1 specific interceptors
DEBUG main org.springframework.aop.framework.JdkDynamicAopProxy - Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [main.com.ssh.shop.dao.impl.MenuDaoImpl@796d3c9f]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'MenuDao'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected element of bean 'menuService': ResourceElement for private main.com.ssh.shop.dao.MenuDao main.com.ssh.shop.service.impl.MenuServiceImpl.menuDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'MenuDao'
DEBUG main org.springframework.context.annotation.CommonAnnotationBeanPostProcessor - Invoking init method on bean 'menuService': public void main.com.ssh.shop.service.impl.BaseServiceImpl.init()
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0'
